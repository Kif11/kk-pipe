// Magic: edb7133a
// Automatically generated PSI dialog (PSI version 13.0.498)
// Sun Dec 07 18:16:48 2014


f_tmp = FLOAT_FIELD;	// dialog.top.ui
editable.gad = NULL { }

sources.parm =
{
    LAYOUT(horizontal) SPACING(0.02) HSTRETCH JUSTIFY(left, center)

    PARM_LABEL_SIMPLE("Source Directories", "sources") WIDTH(1.5);
    { WIDTH(0.08) }

    ROW
    {
	HSTRETCH(0.5) JUSTIFY(left, center)  VALUE(sources.val)

        sources.field = PARM_FIELD (integer, "sources")
				VALUE(sources.val) HSTRETCH(0.5)
				 PREF_WIDTH(0.5);

        ROW
        {
	     LOOK(lightline) VMARGIN(1p)

   	     INCREMENT_ICONBUTTON VALUE(sources.more.val)	
	    	HELP("Add Another Instance") SIZE(0.2, 0.24);
	     DECREMENT_ICONBUTTON VALUE(sources.less.val)	
	        HELP("Remove Last Instance") SIZE(0.2, 0.24);

	}

	ACTION_BUTTON "Clear" VALUE(sources.clear.val);
    }

    { HSTRETCH }
}

sources.multilist = 
{
    LAYOUT(vertical) STRETCH MARGIN(0.05)
}

sources.gad =
{
    LAYOUT(vertical) STRETCH SPACING(0.02)

    sources.parm;
    sources.multilist;
}

sep_3.sval := 1;

sep_3.gad = 
{
    LAYOUT(vertical) SPACING(1p) HSTRETCH VMARGIN(0.05, 0)

    SWITCHER tight
    {
	VALUE(sep_3.sval) HSTRETCH

	{
	    LAYOUT(horizontal) HSTRETCH

	}

	{
	    LAYOUT(horizontal) HSTRETCH

	     LABEL VALUE(sep_3.val[0]) JUSTIFY(center,center) HSTRETCH;
	}

	{
	    LAYOUT(horizontal) HSTRETCH

	     LABEL VALUE(sep_3.val[0]) JUSTIFY(center,center) HSTRETCH;
	     LABEL VALUE(sep_3.val[1]) JUSTIFY(center,center) HSTRETCH;
	}
	{
	    LAYOUT(horizontal) HSTRETCH

	     LABEL VALUE(sep_3.val[0]) JUSTIFY(center,center) HSTRETCH;
	     LABEL VALUE(sep_3.val[1]) JUSTIFY(center,center) HSTRETCH;
	     LABEL VALUE(sep_3.val[2]) JUSTIFY(center,center) HSTRETCH;
	}
	{
	    LAYOUT(horizontal) HSTRETCH

	     LABEL VALUE(sep_3.val[0]) JUSTIFY(center,center) HSTRETCH;
	     LABEL VALUE(sep_3.val[1]) JUSTIFY(center,center) HSTRETCH;
	     LABEL VALUE(sep_3.val[2]) JUSTIFY(center,center) HSTRETCH;
	     LABEL VALUE(sep_3.val[3]) JUSTIFY(center,center) HSTRETCH;
	}
    }
}

patterns.parm =
{
    LAYOUT(horizontal) SPACING(0.02) HSTRETCH JUSTIFY(left, center)

    PARM_LABEL_SIMPLE("Source File Patterns", "patterns") WIDTH(1.5);
    { WIDTH(0.08) }

    ROW
    {
	HSTRETCH(0.5) JUSTIFY(left, center)  VALUE(patterns.val)

        patterns.field = PARM_FIELD (integer, "patterns")
				VALUE(patterns.val) HSTRETCH(0.5)
				 PREF_WIDTH(0.5);

        ROW
        {
	     LOOK(lightline) VMARGIN(1p)

   	     INCREMENT_ICONBUTTON VALUE(patterns.more.val)	
	    	HELP("Add Another Instance") SIZE(0.2, 0.24);
	     DECREMENT_ICONBUTTON VALUE(patterns.less.val)	
	        HELP("Remove Last Instance") SIZE(0.2, 0.24);

	}

	ACTION_BUTTON "Clear" VALUE(patterns.clear.val);
    }

    { HSTRETCH }
}

patterns.multilist = 
{
    LAYOUT(vertical) STRETCH MARGIN(0.05)
}

patterns.gad =
{
    LAYOUT(vertical) STRETCH SPACING(0.02)

    patterns.parm;
    patterns.multilist;
}

sep_1.sval := 1;

sep_1.gad = 
{
    LAYOUT(vertical) SPACING(1p) HSTRETCH VMARGIN(0.05, 0)

    SWITCHER tight
    {
	VALUE(sep_1.sval) HSTRETCH

	{
	    LAYOUT(horizontal) HSTRETCH

	}

	{
	    LAYOUT(horizontal) HSTRETCH

	     LABEL VALUE(sep_1.val[0]) JUSTIFY(center,center) HSTRETCH;
	}

	{
	    LAYOUT(horizontal) HSTRETCH

	     LABEL VALUE(sep_1.val[0]) JUSTIFY(center,center) HSTRETCH;
	     LABEL VALUE(sep_1.val[1]) JUSTIFY(center,center) HSTRETCH;
	}
	{
	    LAYOUT(horizontal) HSTRETCH

	     LABEL VALUE(sep_1.val[0]) JUSTIFY(center,center) HSTRETCH;
	     LABEL VALUE(sep_1.val[1]) JUSTIFY(center,center) HSTRETCH;
	     LABEL VALUE(sep_1.val[2]) JUSTIFY(center,center) HSTRETCH;
	}
	{
	    LAYOUT(horizontal) HSTRETCH

	     LABEL VALUE(sep_1.val[0]) JUSTIFY(center,center) HSTRETCH;
	     LABEL VALUE(sep_1.val[1]) JUSTIFY(center,center) HSTRETCH;
	     LABEL VALUE(sep_1.val[2]) JUSTIFY(center,center) HSTRETCH;
	     LABEL VALUE(sep_1.val[3]) JUSTIFY(center,center) HSTRETCH;
	}
    }
}

pattern_abc_hierarchy.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    pattern_abc_hierarchy.label = PARM_LABEL("Abc as Hierarchy", "pattern_abc_hierarchy") WIDTH(1.5);
    PARM_FIELD(string, "pattern_abc_hierarchy") VALUE(pattern_abc_hierarchy.val) 
	LABELREF(pattern_abc_hierarchy.label) HSTRETCH;

    pattern_abc_hierarchy.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

}
do_oppreset.row.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
do_oppreset.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

do_oppreset.gad = PARM_BUTTON("do_oppreset", "") toggle VALUE(do_oppreset.val);

oppreset_name.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    oppreset_name.label = PARM_LABEL("Apply Preset", "oppreset_name") WIDTH(1.27);
    PARM_FIELD(string, "oppreset_name") VALUE(oppreset_name.val) 
	LABELREF(oppreset_name.label) HSTRETCH;

    oppreset_name.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

}
}	
}	// Template join.bot

do_opcolor.row.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
do_opcolor.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

do_opcolor.gad = PARM_BUTTON("do_opcolor", "") toggle VALUE(do_opcolor.val);

opcolor.gad = 
{
    LAYOUT (horizontal) HSTRETCH

    opcolor.label = PARM_LABEL("Node Color", "opcolor") WIDTH(1.27);

    PARM(float, 3, "opcolor", none, COLOR, "R,G,B") 
	LABELREF(opcolor.label) HSTRETCH;

}
}	

opcolor_presets.gad = opcolor_presets.menu LOOK(menuiconbutton) SIZE(0.26, 0.26);
}	// Template join.bot


sep_2.sval := 1;

sep_2.gad = 
{
    LAYOUT(vertical) SPACING(1p) HSTRETCH VMARGIN(0.05, 0)

    SWITCHER tight
    {
	VALUE(sep_2.sval) HSTRETCH

	{
	    LAYOUT(horizontal) HSTRETCH

	}

	{
	    LAYOUT(horizontal) HSTRETCH

	     LABEL VALUE(sep_2.val[0]) JUSTIFY(center,center) HSTRETCH;
	}

	{
	    LAYOUT(horizontal) HSTRETCH

	     LABEL VALUE(sep_2.val[0]) JUSTIFY(center,center) HSTRETCH;
	     LABEL VALUE(sep_2.val[1]) JUSTIFY(center,center) HSTRETCH;
	}
	{
	    LAYOUT(horizontal) HSTRETCH

	     LABEL VALUE(sep_2.val[0]) JUSTIFY(center,center) HSTRETCH;
	     LABEL VALUE(sep_2.val[1]) JUSTIFY(center,center) HSTRETCH;
	     LABEL VALUE(sep_2.val[2]) JUSTIFY(center,center) HSTRETCH;
	}
	{
	    LAYOUT(horizontal) HSTRETCH

	     LABEL VALUE(sep_2.val[0]) JUSTIFY(center,center) HSTRETCH;
	     LABEL VALUE(sep_2.val[1]) JUSTIFY(center,center) HSTRETCH;
	     LABEL VALUE(sep_2.val[2]) JUSTIFY(center,center) HSTRETCH;
	     LABEL VALUE(sep_2.val[3]) JUSTIFY(center,center) HSTRETCH;
	}
    }
}

buildpath.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)

 buildpath.label = PARM_LABEL("Build Path", "buildpath") WIDTH(1.5);
 PARM_FIELD(pathstring, "buildpath") VALUE(buildpath.val) 
	LABELREF(buildpath.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(buildpath.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(buildpath.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;
}

opprefix.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    opprefix.label = PARM_LABEL("OP Prefix", "opprefix") WIDTH(1.5);
    PARM_FIELD(string, "opprefix") VALUE(opprefix.val) 
	LABELREF(opprefix.label) HSTRETCH;

}

chopname.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    chopname.label = PARM_LABEL("CHOP Name", "chopname") WIDTH(1.5);
    PARM_FIELD(string, "chopname") VALUE(chopname.val) 
	LABELREF(chopname.label) HSTRETCH;

    chopname.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

}

perform_build.gad = ROW
{

    { WIDTH(1.5) }
    { WIDTH(0.1) }

    PARM_BUTTON("perform_build", ":: Build Scene Objects ::") push VALUE(perform_build.val);
}

do_rebuild.gad = ROW
{

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("do_rebuild", "Rebuild Existing Objects") toggle VALUE(do_rebuild.val);

}

opprefix_funcs.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center)

    PARM_LABEL_SIMPLE("Misc. Functions", "opprefix_funcs") WIDTH(1.5);
    { WIDTH(0.09) }

    opprefix_funcs.menu;

}

sep_0.sval := 1;

sep_0.gad = 
{
    LAYOUT(vertical) SPACING(1p) HSTRETCH VMARGIN(0.05, 0)

    SWITCHER tight
    {
	VALUE(sep_0.sval) HSTRETCH

	{
	    LAYOUT(horizontal) HSTRETCH

	}

	{
	    LAYOUT(horizontal) HSTRETCH

	     LABEL VALUE(sep_0.val[0]) JUSTIFY(center,center) HSTRETCH;
	}

	{
	    LAYOUT(horizontal) HSTRETCH

	     LABEL VALUE(sep_0.val[0]) JUSTIFY(center,center) HSTRETCH;
	     LABEL VALUE(sep_0.val[1]) JUSTIFY(center,center) HSTRETCH;
	}
	{
	    LAYOUT(horizontal) HSTRETCH

	     LABEL VALUE(sep_0.val[0]) JUSTIFY(center,center) HSTRETCH;
	     LABEL VALUE(sep_0.val[1]) JUSTIFY(center,center) HSTRETCH;
	     LABEL VALUE(sep_0.val[2]) JUSTIFY(center,center) HSTRETCH;
	}
	{
	    LAYOUT(horizontal) HSTRETCH

	     LABEL VALUE(sep_0.val[0]) JUSTIFY(center,center) HSTRETCH;
	     LABEL VALUE(sep_0.val[1]) JUSTIFY(center,center) HSTRETCH;
	     LABEL VALUE(sep_0.val[2]) JUSTIFY(center,center) HSTRETCH;
	     LABEL VALUE(sep_0.val[3]) JUSTIFY(center,center) HSTRETCH;
	}
    }
}
keeppos.row.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
keeppos.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

keeppos.gad = ROW
{

    PARM_BUTTON("keeppos", "Keep position when parenting") toggle VALUE(keeppos.val);

}

pre_xform.gad = ROW
{

    {  }
    { WIDTH(0.1) }

    pre_xform.menu;
}
}	
}	// Template join.bot

xOrd.row.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
xOrd.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

xOrd.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center)

    PARM_LABEL_SIMPLE("Transform Order", "xOrd") WIDTH(1.5);
    { WIDTH(0.09) }

    xOrd.menu;

}

rOrd.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center)

    rOrd.menu;

}
}	
}	// Template join.bot


t.gad = ROW
{
   HSTRETCH

   t.label = PARM_LABEL("Translate", "t") WIDTH(1.5);

   PARM(float, 3, "t", none, none, "X,Y,Z") LABELREF(t.label)
	HSTRETCH;

}

r.gad = ROW
{
   HSTRETCH

   r.label = PARM_LABEL("Rotate", "r") WIDTH(1.5);

   PARM(float, 3, "r", none, none, "X,Y,Z") LABELREF(r.label)
	HSTRETCH;

}

s.gad = ROW
{
   HSTRETCH

   s.label = PARM_LABEL("Scale", "s") WIDTH(1.5);

   PARM(float, 3, "s", none, none, "X,Y,Z") LABELREF(s.label)
	HSTRETCH;

}

p.gad = ROW
{
   HSTRETCH

   p.label = PARM_LABEL("Pivot", "p") WIDTH(1.5);

   PARM(float, 3, "p", none, none, "X,Y,Z") LABELREF(p.label)
	HSTRETCH;

}

scale.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 scale.label = PARM_LABEL("Uniform Scale", "scale") WIDTH(1.5);
 PARM(float, 1, "scale", none, none) RANGE(0,1)
	 LABELREF(scale.label) HSTRETCH;

}

lookatpath.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)

 lookatpath.label = PARM_LABEL("Look At", "lookatpath") WIDTH(1.5);
 PARM_FIELD(pathstring, "lookatpath") VALUE(lookatpath.val) 
	LABELREF(lookatpath.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(lookatpath.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(lookatpath.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;
}

lookup.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center)

    PARM_LABEL_SIMPLE("Look At Up Vector", "lookup") WIDTH(1.5);
    { WIDTH(0.09) }

    lookup.menu;

}

pathobjpath.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)

 pathobjpath.label = PARM_LABEL("Path Object", "pathobjpath") WIDTH(1.5);
 PARM_FIELD(pathstring, "pathobjpath") VALUE(pathobjpath.val) 
	LABELREF(pathobjpath.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(pathobjpath.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(pathobjpath.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;
}

roll.gad = ROW
{
   HSTRETCH

   roll.label = PARM_LABEL( "Roll", "roll" ) WIDTH(1.5);

   PARM(float, 1, "roll", none, none) RANGE(-360, 360)
	LABELREF( roll.label ) HSTRETCH;

}

pos.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 pos.label = PARM_LABEL("Position", "pos") WIDTH(1.5);
 PARM(float, 1, "pos", none, none) RANGE(0,10)
	LOCK_RANGE_MIN LABELREF(pos.label) HSTRETCH;

}

uparmtype.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center)

    PARM_LABEL_SIMPLE("Parameterization", "uparmtype") WIDTH(1.5);
    { WIDTH(0.09) }

    uparmtype.menu;

}

pathorient.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 pathorient.label = PARM_LABEL("Orient Along Path", "pathorient") WIDTH(1.5);
 PARM(integer, 1, "pathorient", none, none) RANGE(0,1)
	 LABELREF(pathorient.label) HSTRETCH;

}

up.gad = ROW 
{
    HSTRETCH

    up.label = PARM_LABEL("Orient Up Vector", "up") WIDTH(1.5);

    PARM(float, 3, "up", none, none) LABELREF(up.label)
	HSTRETCH;

}

bank.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 bank.label = PARM_LABEL("Auto-Bank factor", "bank") WIDTH(1.5);
 PARM(float, 1, "bank", none, none) RANGE(-1,1)
	 LABELREF(bank.label) HSTRETCH;

}
label1.gad = NULL { }
label2.gad = NULL { }
label3.gad = NULL { }
label4.gad = NULL { }
tdisplay.row.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
tdisplay.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

tdisplay.gad = PARM_BUTTON("tdisplay", "") toggle VALUE(tdisplay.val);

display.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 display.label = PARM_LABEL("Display", "display") WIDTH(1.27);
 PARM(integer, 1, "display", none, none) RANGE(0,1)
	LOCK_RANGE LABELREF(display.label) HSTRETCH;

}
}	
}	// Template join.bot


outputobj.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center)

    PARM_LABEL_SIMPLE("Output Transform", "outputobj") WIDTH(1.5);
    { WIDTH(0.09) }

    outputobj.menu;

}

visibleobjects.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 visibleobjects.label = PARM_LABEL("Visible Children", "visibleobjects") WIDTH(1.5);
 PARM_FIELD (pathstring, "visibleobjects") LABELREF(visibleobjects.label) 
	VALUE(visibleobjects.val) HSTRETCH;

 visibleobjects.menu LOOK(menuiconbutton) SIZE(0.26, 0.26);

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(visibleobjects.plus) LOOKFLAT
    HELP("Open floating bundle chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

}

picking.gad = ROW
{

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("picking", "Viewport Selecting Enabled") toggle VALUE(picking.val);

}

pickscript.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

 pickscript.label = PARM_LABEL("Select Script", "pickscript") WIDTH(1.5);

 PARM_FIELD (pathstring, "pickscript") LABELREF(pickscript.label)
	VALUE(pickscript.val) HSTRETCH;

 pickscript.menu LOOK(menuiconbutton) SIZE(0.26, 0.26);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(pickscript.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

}

caching.gad = ROW
{

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("caching", "Cache Object Transform") toggle VALUE(caching.val);

}
use_dcolor.gad = NULL { }
dcolor.gad = NULL { }

stdswitcher3.gad = 
{
    LAYOUT(vertical) HSTRETCH

    TABDIALOG
    { 
	VALUE(stdswitcher3.gad.val) STRETCH(1,0)

	TAB "Transform"
	{
	    LAYOUT(vertical) STRETCH

	    MARGIN(2p) SPACING(2p)
	    keeppos.row.join;		
	    xOrd.row.join;		
	    t.gad;		
	    r.gad;		
	    s.gad;		
	    p.gad;		
	    scale.gad;		
	    lookatpath.gad;		
	    lookup.gad;		
	    pathobjpath.gad;		
	    roll.gad;		
	    pos.gad;		
	    uparmtype.gad;		
	    pathorient.gad;		
	    up.gad;		
	    bank.gad;		

	    { STRETCH(1,1) LOOK(plain) }
	}

	TAB "Subnet"
	{
	    LAYOUT(vertical) STRETCH

	    MARGIN(2p) SPACING(2p)
	    label1.gad;		
	    label2.gad;		
	    label3.gad;		
	    label4.gad;		
	    tdisplay.row.join;		
	    outputobj.gad;		
	    visibleobjects.gad;		
	    picking.gad;		
	    pickscript.gad;		
	    caching.gad;		
	    use_dcolor.gad;		
	    dcolor.gad;		

	    { STRETCH(1,1) LOOK(plain) }
	}
    } 
}

folder0.gad = 
{
    LAYOUT(vertical) HSTRETCH

    TABDIALOG
    { 
	VALUE(folder0.gad.val) STRETCH(1,0)
    } 
}

dialog_norm.gad = 
{
    LAYOUT(vertical) SPACING(0.02) HSTRETCH LOOK(plain) 
    editable.gad; 
    sources.gad; 
    sep_3.gad; 
    patterns.gad; 
    sep_1.gad; 
    pattern_abc_hierarchy.gad; 
    do_oppreset.row.join; 
    do_opcolor.row.join; 
    sep_2.gad; 
    buildpath.gad; 
    opprefix.gad; 
    chopname.gad; 
    perform_build.gad; 
    do_rebuild.gad; 
    opprefix_funcs.gad; 
    sep_0.gad; 
} 
// dialog.bot.ui

extrastuffstowbar_minimize.val := 1;

dialog = OPENNOTIFIER
{
    LAYOUT(vertical) SPACING(0.02) LOOK(bg) VALUE(open.val) HSTRETCH

    { HEIGHT(1p) LOOK(bg) HSTRETCH }

    dialog_norm.gad;
}
